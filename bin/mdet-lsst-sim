#!/usr/bin/env python

import sys
import argparse
from mdet_lsst_sim.run_sim import run_sim
from mdet_lsst_sim.run_cells import run_cells


def get_args():
    parser = argparse.ArgumentParser()
    parser.add_argument('--ntrial', type=int, required=True,
                        help='number of sim pairs to run')
    parser.add_argument('--output', required=True, help='output file path')
    parser.add_argument('--config', help='optional simulation config')
    parser.add_argument('--seed', type=int, required=True, help='seed for rng')

    parser.add_argument('--nocancel', action='store_true',
                        help=("don't run two cancelling shears"))

    parser.add_argument('--show', action='store_true')
    parser.add_argument('--show-sheared', action='store_true',
                        help='show sheared images')
    parser.add_argument('--show-masks', action='store_true',
                        help='just show image/masks in ds9')
    parser.add_argument('--show-sim', action='store_true',
                        help='show the sim image')

    parser.add_argument('--loglevel', default='info', help='logging level')
    return parser.parse_args()


def main():
    from mdet_lsst_sim import util

    args = get_args()

    configs = util.load_configs_from_args(args)

    if 'cell_size' in configs['mls_config']:
        run_cells(
            seed=args.seed,
            mdet_config=configs['mdet_config'],
            coadd_config=configs['coadd_config'],
            sim_config=configs['sim_config'],
            ntrial=args.ntrial,
            output=args.output,
            nocancel=args.nocancel,
            show=args.show,
            show_sheared=args.show_sheared,
            show_sim=args.show_sim,
            loglevel=args.loglevel,
            **configs['mls_config']
        )
    else:

        run_sim(
            seed=args.seed,

            mdet_config=configs['mdet_config'],
            coadd_config=configs['coadd_config'],
            sim_config=configs['sim_config'],

            ntrial=args.ntrial,
            output=args.output,
            nocancel=args.nocancel,
            show=args.show,
            show_sheared=args.show_sheared,
            show_sim=args.show_sim,
            **configs['mls_config']
        )


if __name__ == '__main__':
    main()
